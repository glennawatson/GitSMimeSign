trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotNetVersion: '3.x'
  nugetVersion: '5.2.0'

steps:

- powershell: Invoke-WebRequest -Uri "https://download.visualstudio.microsoft.com/download/pr/82e3dcda-e8a0-44e4-8860-eb93a12d4e80/70784a9716bcf3a3481e3ad696f09f3a784186f7882b08824bdd9467ad65ddda/vs_Enterprise.exe" -OutFile "$(Agent.TempDirectory)\vs_enterprise.exe"	- script: "c:\program files (x86)\microsoft visual studio\installer\vs_installershell.exe" update --wait --quiet --norestart --installPath="c:\program files (x86)\microsoft visual studio\2019\Enterprise"
  displayName: Download VS installer	

- script: '$(Agent.TempDirectory)\vs_enterprise.exe --update --quiet --wait'
  displayName: Update VS Installer 
  
- script: '"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installershell.exe" update --quiet --norestart --installPath="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"'
  displayName: Update VS 2019 Release
  
- task: NuGetToolInstaller@0
  displayName: Install NuGet v$(nugetVersion)
  inputs:
    versionSpec: $(nugetVersion)

- task: UseDotNet@2
  displayName: Install Dot Net Core v$(dotNetVersion)
  inputs:
    version: $(dotNetVersion)

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- script: nbgv cloud
  displayName: Set Version
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- task: MSBuild@1
  displayName: Build Solutions
  inputs:
    solution: '$(solution)'
    msbuildArguments: /t:build;pack /p:NoPackageAnalysis=true /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)\artifacts
    configuration: $(BuildConfiguration)
    maximumCpuCount: true

- task: PublishBuildArtifacts@1
  displayName: Publish Build Artifacts
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)\artifacts
    ArtifactName: artifacts
    publishLocation: Container
  condition: always()
