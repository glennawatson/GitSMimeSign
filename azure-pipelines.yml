trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotNetVersion: '3.x'
  nugetVersion: '5.2.0'

steps:
- task: NuGetToolInstaller@0
  displayName: Install NuGet v$(nugetVersion)
  inputs:
    versionSpec: $(nugetVersion)

- task: UseDotNet@2
  displayName: Install Dot Net Core v$(dotNetVersion)
  inputs:
    version: $(dotNetVersion)

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- script: nbgv cloud
  displayName: Set Version
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet'
  inputs:
    command: 'restore'
    projects: '$(solution)'
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    projects: '$(solution)'
  env:
    COREHOST_TRACE: 0
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    

- task: PublishBuildArtifacts@1
  displayName: Publish Build Artifacts
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)\artifacts
    ArtifactName: artifacts
    publishLocation: Container
  condition: always()
